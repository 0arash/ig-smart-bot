// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum ChatMessageType {
  TEXT
}

model User {
  id         Int        @id @default(autoincrement())
  name       String
  email      String     @unique
  password   String
  address    String?
  code_meli  String?
  user_plans UserPlan[]
}

model Plan {
  id         Int        @id @default(autoincrement())
  title      String
  price      Int
  days       Int
  user_plans UserPlan[]
}

model UserPlan {
  id            Int           @id @default(autoincrement())
  plan          Plan          @relation(fields: [plan_id], references: [id])
  user          User          @relation(fields: [user_id], references: [id])
  plan_id       Int           @map("planId")
  user_id       Int           @map("userId")
  chat_users    ChatUser[]
  created_at    DateTime      @default(now())
  chat_messages ChatMessage[]
  Product       Product[]
}

model ChatUser {
  id            Int           @id @default(autoincrement())
  name          String?
  email         String?
  user_plan     UserPlan      @relation(fields: [user_plan_id], references: [id])
  user_plan_id  Int           @map("userPlanId")
  created_at    DateTime      @default(now())
  chat_messages ChatMessage[]
}

model ChatMessage {
  id              Int             @id @default(autoincrement())
  is_user_message Boolean
  type            ChatMessageType @default(TEXT)
  content         String
  chat_user       ChatUser        @relation(fields: [chat_user_id], references: [id])
  user_plan       UserPlan        @relation(fields: [user_plan_id], references: [id])
  chat_user_id    Int             @map("chatUserId")
  user_plan_id    Int             @map("userPlanId")
  created_at      DateTime        @default(now())
}

model Product {
  id           Int      @id @default(autoincrement())
  url          String
  title        String
  description  String
  image        String
  price        Int
  attributes   Json
  user_plan    UserPlan @relation(fields: [user_plan_id], references: [id])
  user_plan_id Int      @map("userPlanId")
  weight       Float    @default(0)
}
